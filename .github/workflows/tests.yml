name: Python Tests

on:
  workflow_dispatch:
  pull_request:
    branches:
      - main
      - develop

jobs:
  test:
    runs-on: ubuntu-latest
    if: "${{!contains(github.event.head_commit.message, 'ci skip')}}"

    strategy:
      matrix:
        python_version: ["3.11", "3.10", "3.9", "3.8"]

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Cache Python Packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.config/pypoetry
            ~/.cache/pip
          key: python-pkgs-${{ hashFiles('pyproject.toml') }}
          restore-keys: python-pkgs

      - name: Install poetry/vscode-task-runner
        run: |
          pipx install poetry
          pipx install vscode-task-runner

      - name: Setup Python ${{ matrix.python_version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python_version }}
          cache: poetry

      - name: Install Python Dependencies
        run: vtr poetry-install-all

      - name: Run Tests
        run: vtr tests

  docs:
    runs-on: ubuntu-latest
    if: "${{!contains(github.event.head_commit.message, 'ci skip')}}"

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Install PySide Packages
        run: |
          sudo apt-get update -y
          sudo apt-get install gnupg2 libegl1-mesa libgl1 libxkbcommon-x11-0 libdbus-1-3 -y

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: "19"
          cache: npm

      - name: Cache Python Packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.config/pypoetry
            ~/.cache/pip
          key: python-pkgs-${{ hashFiles('pyproject.toml') }}
          restore-keys: python-pkgs

      - name: Install poetry/vscode-task-runner
        run: |
          pipx install poetry
          pipx install vscode-task-runner

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version-file: .python-version
          cache: poetry

      - name: Install Dependencies
        run: vtr install

      - name: Build Docs
        run: vtr build-code-docs

  # does not support 2.5.0
  # validate-apispec:
  #   runs-on: ubuntu-latest
  #   if: "${{!contains(github.event.head_commit.message, 'ci skip')}}"

  #   steps:
  #     - name: Checkout Code
  #       uses: actions/checkout@v3

  #     - name: Validate AsyncAPI Spec
  #       uses: WaleedAshraf/asyncapi-github-action@v0.0.9
  #       with:
  #         filepath: bell/avr/mqtt/asyncapi.yml
