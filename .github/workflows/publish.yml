name: Publish

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  pypi-publish:
    runs-on: ubuntu-latest
    if: "${{!contains(github.event.head_commit.message, 'ci skip') && !contains(github.event.head_commit.message, 'pypi skip')}}"

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Install poetry
        run: |
          python -m pip install pip wheel pipx --upgrade
          pipx install poetry

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version-file: .python-version
          cache: poetry

      - name: Install Python Dependencies
        run: poetry install --sync

      - name: Generate Code
        run: poetry run python build.py

      - name: Build Package
        run: poetry build

      - name: Get version
        run: echo "PROJECT_VERSION=$(poetry version --short)" >> $GITHUB_ENV

      - name: Create tag
        uses: mathieudutour/github-tag-action@v6.1
        with:
          custom_tag: ${{ env.PROJECT_VERSION }}
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Create release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.PROJECT_VERSION }}

      - name: Publish
        run: poetry publish
        env:
          POETRY_PYPI_TOKEN_PYPI: ${{ secrets.PYPI_TOKEN }}

  docs-build:
    runs-on: ubuntu-latest
    if: "${{!contains(github.event.head_commit.message, 'ci skip')}}"
    # make sure publish worked
    # needs: pypi-publish

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v3

      - name: Install PySide Packages
        run: |
          sudo apt-get update -y
          sudo apt-get install gnupg2 libegl1-mesa libgl1 libxkbcommon-x11-0 libdbus-1-3 -y

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: "19"
          cache: npm

      - name: Install poetry
        run: |
          python -m pip install pip wheel pipx --upgrade
          pipx install poetry

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version-file: .python-version
          cache: poetry

      - name: Install Python Dependencies
        run: poetry install --sync --all-extras

      - name: Install Node Dependencies
        run: npm install

      - name: Build Docs
        run: npm run build-docs
        env:
          BASE_URL: ${{ steps.pages.outputs.base_url }}

      - name: Upload Artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: docs

  docs-deploy:
    runs-on: ubuntu-latest
    if: "${{!contains(github.event.head_commit.message, 'ci skip')}}"
    # make sure build ran first
    needs: docs-build

    permissions:
      pages: write # to deploy to Pages
      id-token: write # to verify the deployment originates from an appropriate source

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
